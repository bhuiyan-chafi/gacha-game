services:
  dbm_one:
    build: ./DbmOne
    container_name: dbmone
    volumes:
      - ./DbmOne:/app
    depends_on:
        db_service:
            condition: service_healthy 
  dbm_two:
    build: ./DbmTwo
    container_name: dbtwo
    volumes:
      - ./DbmTwo:/app
    depends_on:
        db_service:
            condition: service_healthy 
  dbm_three:
    build: ./DbmThree
    container_name: dbmthree
    volumes:
      - ./DbmThree:/app
    depends_on:
        db_service:
            condition: service_healthy 
  auth_service:
    build: ./AuthService
    container_name: authservice
    volumes:
      - ./AuthService:/app
    depends_on:
      db_service:
        condition: service_healthy 
      dbm_one:
            condition: service_started 
  user_service:
    build: ./UserService
    container_name: userservice
    volumes:
      - ./UserService:/app
    depends_on:
      db_service:
        condition: service_healthy
      dbm_two:
        condition: service_started 
  gacha_service:
    build: ./GachaService
    container_name: gachaservice
    volumes:
      - ./GachaService:/app
    depends_on:
      db_service:
        condition: service_healthy
      dbm_two:
        condition: service_started 
      user_service:
        condition: service_started 
  play_service:
    build: ./PlayService
    container_name: playservice
    volumes:
      - ./PlayService:/app
    depends_on:
      db_service:
        condition: service_healthy
      gacha_service:
        condition: service_started
      dbm_three:
        condition: service_started 
  auction_service:
    build: ./AuctionService
    container_name: auctionservice
    volumes:
      - ./AuctionService:/app
    depends_on:
      db_service:
        condition: service_healthy
      dbm_three:
        condition: service_started 
      play_service:
        condition: service_started
      gacha_service:
        condition: service_started
  transaction_service:
    build: ./TransactionService
    container_name: transactionservice
    volumes:
      - ./TransactionService:/app
    depends_on:
      db_service:
        condition: service_healthy
      dbm_three:
        condition: service_started 
      play_service:
        condition: service_started
      auction_service:
        condition: service_started
  gateway_one:
      build: ./ApiGatewayOne
      container_name: gatewayone
      volumes:
        - ./ApiGatewayOne:/app
      depends_on:
          auth_service:
              condition: service_started
      ports:
          - 8001:8000
  gateway_two:
      build: ./ApiGatewayTwo
      container_name: gatewaytwo
      volumes:
        - ./ApiGatewayTwo:/app
      depends_on:
          user_service:
              condition: service_started
          gacha_service:
              condition: service_started
      ports:
          - 8002:8000
  gateway_three:
      build: ./ApiGatewayThree
      container_name: gatewaythree
      volumes:
        - ./ApiGatewayThree:/app
      depends_on:
          play_service:
              condition: service_started
          auction_service:
              condition: service_started
          transaction_service:
              condition: service_started
      ports:
          - 8003:8000
  db_service:
        image: mysql:latest
        container_name: dbservice
        env_file:
        - .env  # Pointing to an external .env file for credentials
        volumes:
        - gacha_db:/var/lib/mysql
        - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
        ports:
        - "3306:3306"
        healthcheck:
            test: ["CMD-SHELL", "mysqladmin ping -h localhost -u $DATABASE_USER --password=$DATABASE_PASSWORD || exit 1"]
            interval: 10s
            timeout: 5s
            retries: 5
volumes:
  gacha_db: